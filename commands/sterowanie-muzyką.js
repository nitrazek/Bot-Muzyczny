const { Client, ApplicationCommandOptionType, CommandInteraction } = require('discord.js');
const { Embed } = require('../handlers/embed');

module.exports = {
    name: 'sterowanie-muzykƒÖ',
    description: 'Sterowanie muzykƒÖ (wzn√≥w, zatrzymaj, pomi≈Ñ, wyj≈õcie)',
    options: [
        {
            name: 'akcja',
            description: 'Wybierz akcjƒô do wykonania',
            type: ApplicationCommandOptionType.String,
            required: true,
            choices: [
                { name: '‚ñ∂ Wzn√≥w piosenkƒô', value: 'resume' },
                { name: '‚è∏ Zatrzymaj piosenkƒô', value: 'pause' },
                { name: '‚è≠ Pomi≈Ñ piosenkƒô', value: 'skip' },
                { name: '‚èπ Wyj≈õcie z kana≈Çu', value: 'quit' }
            ]
        }
    ],

    /**
     * @param {Client} client 
     * @param {CommandInteraction} interaction 
     */
    async run(client, interaction) {
        const { options, guild, member } = interaction;
        const voiceChannel = member.voice.channel;

        if (!guild.members.me.voice.channelId) return Embed(interaction, 'Red', '‚ùå | Nie jestem na kanale g≈Çosowym');
        if (voiceChannel.id !== guild.members.me.voice.channelId) return Embed(interaction, 'Red', '‚ùå | Nie jeste≈õmy na tym samym kanale g≈Çosowym');

        const queue = await client.DisTube.getQueue(voiceChannel);
        if (!queue) return Embed(interaction, 'Blue', 'üï≥ | Brak utwor√≥w w kolejce');

        switch (options.getString('akcja')) {
            case 'resume':
                await queue.resume(voiceChannel);
                return Embed(interaction, 'Blue', '‚ñ∂ | Wznowiono piosenkƒô');
            case 'pause':
                await queue.pause(voiceChannel);
                return Embed(interaction, 'Blue', '‚è∏ | Zatrzymano piosenkƒô');
            case 'skip':
                if (queue.songs.size() <= 1) return Embed(interaction, 'Red', "‚ùå | Brak kolejnych utwor√≥w w kolejce");
                await queue.skip(voiceChannel);
                return Embed(interaction, 'Blue', '‚è≠ | Pominiƒôto piosenkƒô');
            case 'quit':
                await queue.stop(voiceChannel);
                return Embed(interaction, 'Blue', '‚èπ | Opuszczono kana≈Ç');
            default:
                return;
        }
    }
}